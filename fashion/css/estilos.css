body {
  color: #333333;
  font-family: "Lucida Sans Unicode", "Lucida Grande", sans-serif;
}

/*alinhando o conteúdo principal, o header e o rodapé no centro da página */
.container {
  margin: 0 auto;
  width: 940px;
}
.sacola {
  background: url(../img/sacola.png) no-repeat top right;

  font-size: 14px;
  padding-right: 35px;
  text-align: right;
  width: 140px;
}

.menu-opcoes ul {
  font-size: 15px;
}

.menu-opcoes a {
   color: #003366;
}

.menu-opcoes ul li {
  display: inline;
  margin-left: 20px;
}

/* a sacola está desalinhada. O texto está muito pra cima e não alinhado com a base do ícone. O código abaixo resolve esse problema */
.sacola {
  padding-top: 8px;
}

/* Tipos de position: 
static posiciona o elmento seguindo a sequencia de redenrização da página, ele não aceita os comando top, right, left e bottom; 
fixed ele fica posicionado num local fixo na tela do navegador mesmo quando você rola a página (muito usado para avisos importantes), aceita os comandos top e etc...                       
relative ele toma como referencia a sua posição original de redenrização e se desloca segundo os comandos top, right e etc... a partir da sua posição original
aboslute se o elemento pai for diferente de static ele toma o elemento pai como referencia, do contrário se o elemento  pai for static ou não for definido (por padrão é static)
ele se move a partir dos limites da página. */


header {
  position: relative;
}

/*Posiciona o menu à direita a direita do logo no header */
.menu-opcoes {
  position: absolute;
  bottom: 0px;
  right: 0px;
}

/*posiciona a sacola na a direita e no topo do header */
.sacola {
  position: absolute;
  top: 0;
  right: 0;
}

.busca, 
.menu-departamentos {
  background-color: #dcdcdc;
  font-weight: bold;
  text-transform: uppercase;
  
  margin-right: 10px;
  width: 230px;
}

.busca h2,
.busca form,
.menu-departamentos h2 {
  margin: 10px;
}

.menu-departamentos li {
  background-color: white;
  margin-bottom: 1px;
  padding: 5px 10px;
}

.menu-departamentos a {
  color: #333333;
  text-decoration: none;
}

.busca input {
  vertical-align: middle;
}

.busca input[type=search] {
  width: 170px;
}

.busca, 
.menu-departamentos {
  float: left;
}

.menu-departamentos {
    clear: left;
}

.destaque {
  margin-top: 10px;
}
.menu-departamentos {
  margin-top: 10px;
  padding-bottom: 10px;
}

.painel {
  margin: 10px 0;
  padding: 10px;
  width: 445px;
}

.novidades {
  float: left;
}

.mais-vendidos {
  float: right;
}

.painel li {
  display: inline-block;
  vertical-align: top;
  width: 140px;

  margin: 2px;
  padding-bottom: 10px;
}

.painel h2 {
  font-size: 24px;
  font-weight: bold;
  text-transform: uppercase;

  margin-bottom: 10px;
}

.painel a {
  color: #333;
  font-size: 14px;
  text-align: center;
  text-decoration: none;
}

.novidades {
  background-color: #f5dcdc;
}

.mais-vendidos {
  background-color: #dcdcf5;
}

footer {
  background-image: url(../img/fundo-rodape.png);
}

.social a {
  /* tamanho da imagem */
  height: 32px;
  width: 32px;

  /* image replacement */
  display: block;
  text-indent: -9999px;  
}

.social a[href*="facebook.com"] {
  background-image: url(../img/facebook.png);
}

.social a[href*="twitter.com"] {
  background-image: url(../img/twitter.png);
}

.social a[href*="plus.google.com"] {
  background-image: url(../img/googleplus.png);
}

footer {
  clear: both;
}

footer {
  padding: 20px 0;
}

footer .container {
  position: relative;
}

.social {
  position: absolute;
  top: 12px;
  right: 0;
}

.social li {
  float: left;
  margin-left: 25px;
}

.menu-opcoes a:hover {
    color: #007dc6;
}
.menu-opcoes a:active {
     color: #867dc6;
}
/* fazendo um menu sumir e aparecer ao passar o mouse nos três blocos abaixo */
.menu-departamentos li ul {
  display: none;
}
.menu-departamentos li:hover ul {
  display: block;
}
.menu-departamentos ul ul li {
  background-color: #dcdcdc;
}


/* Adicionando texto nos links via css, para melhorar a semantica do html */

.menu-departamentos li li a:before {
  content: '- ';
}
/* Adicionando texto usando caracteres unicode (opcional)*/

.menu-departamentos li li a:before {
  content: '\272A';
  padding-right: 3px;
}

.painel h2:before {
  content: '\2756';
  padding-right: 5px;
  opacity: 0.4;
}

/* selecione as primeiras linhas dos parágrafos que não são precedidos por outros parágrafos. */

:not(p) + p:first-line {
  font-variant: small-caps;
}

/* deixando o painel de mais vendidos e de novidades mais bonito com sombras */

.painel {
  border-radius: 4px;
  box-shadow: inset 1px 1px 4px #999;
}
.painel h2 {
  text-shadow: 3px 3px 2px #FFF;
}

/* opcional em relação ao bloco de cima */


.painel h2 {
  text-shadow: 1px 1px 2px rgba(255,255,255,0.8);
}

/*bordas especificas */

.busca {
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
}

/* aplicando gradiente nos paineis */
.novidades {
  background-color: #f5dcdc;
  background: linear-gradient(#f5dcdc, #bebef4);
}

.mais-vendidos {
  background: #dcdcf5;
  background: linear-gradient(#dcdcf5, #f4bebe);
}
/* Fazendo uma transição criando uma sombra e um fundo branco suavemente */
.painel li:hover {
  background-color: rgba(255,255,255,0.8);
  box-shadow: 0 0 5px #333;
  transition: 0.7s;
}

/* Aumenta a figura de tamanho, e nesse caso ocorre de forma suave por causa do transition acima que está com o valor all padrão
   Também faz uma rotação de 5 graus nas figuras com o transform*/
.painel li:hover {
  transform: scale(1.2) rotate(-5deg);
}

/* Faz os elementos pares girarem no sentido horário */
.painel li:nth-child(2n):hover {
  transform: scale(1.2) rotate(5deg);
}

/* aplica a transição na volta, evitando que o elemento volte de forma abrupta */
.painel li {
  transition: 0.7s;
}

/*outras opções de transição (opcional) 

.painel li:hover {
  transition: 0.7s ease-in;
}
.painel li {
  transition: 0.7s ease-out;
}

*/

/* Banner rotativo, ele desenha uma imagem de pause e play e devolve a classe play e pause para ser usado pelo javascript */
.destaque {
  position: relative;
}
.pause,
.play {
  display: block;
  position: absolute;
  right: 15px;
  top: 15px;
}
.pause {
  border-left: 10px solid #900;
  border-right: 10px solid #900;
  height: 30px;
  width: 5px;
}
.play {
  border-left: 25px solid #900;
  border-bottom: 15px solid transparent;
  border-top: 15px solid transparent;
}

/* Escondendo botão de mostrar mais produtos ao clicar (usando jquery) */

.painel button {

display: none;
}

.painel-compacto li:nth-child(n+7) {
  display: none;
}
/* Com jquery o botão é ativado (isso é necessário, pois se o javascript estiver desabilitado o botão não precisa aparecer, pois ele não teria serventia) */
.painel-compacto button {
  display: block;
}

/* deixando o botão mais bonitinho */
.painel button {
  /* posicionamento */
  float: right;
  margin-right: 10px;
  padding: 10px;

  /* estilo */
  background-color: #333;
  border: 0;
  border-radius: 4px;
  box-shadow: 1px 1px 3px rgba(30,30,30,0.5);
  color: white;
  font-size: 1em;
  text-decoration: none;
  text-shadow: 1px 0 1px black;

  /* animação*/
  transition: 0.3s;
}
.painel button:hover {
  background-color: #393939;
  box-shadow: 1px 0 20px rgba(200,200,120,0.9);
}

.painel button {
  color: white;
  position: relative;
  margin-bottom: 10px;
}
.painel button:after {
  /* elemento vazio */
  content: '';
  display: block;
  height: 0;
  width: 0;

  /* triangulo */
  border-top: 10px solid #333;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;

  /* posicionamento */
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;

  /* animação */
  transition: 0.3s;
}
.painel button:hover:after {
  border-top-color: #393939;
}

/* Estilizando o output do produto.php */

.tamanho output {
  display: inline-block;
  height: 44px;
  width: 44px;

  line-height: 44px;
  text-align: center;

  border: 3px solid #666;
  border-radius: 50%;
  color: #555;
}
/* aplicando fontes personalizadas do google web fonts */
body {
  font-family: 'Jomhuria', cursive;
font-family: 'Indie Flower', cursive;
}
.painel h2 {
  font-family: 'Bad Script', sans-serif;
}


/*Anotações importantes
-> text-transform pode ser uppercase, lowercase e capitalize; 
-> text-decoration pode ser line-through, overline, underline e blink; 
-> herança não é aplicada nos filhos nos atributos do tipo box, como padding, margin, height e width;
-> O valor inherit indica para o elemento filho que ele deve utilizar o mesmo valor presente no elemento pai, sendo assim, toda vez que o tamanho do elemento pai for alterado
->  width, margin e padding não funcionam em elementos do tipo inline, para usar elementos lado a lado juntamente com as opções de box usa-se o inline-box
-> Image replacement Serve para, usando técnicas de CSS, exibir uma imagem em algum elemento que originalmente foi feito com texto consiste em três fases:
definir o tamanho do elemento igual ao da imagem, fazer o texto original sumir usando o tex-ident com valor negativo e 
-> O hover é útil em vários cenários. Um interessante é fazer um menu que abre e fecha em puro CSS.
-> text-shadow (até 4 parametros), box shadow (até 5 e ainda suporta o inset que é uma borda interna), border-radius(arredondamento de borda: 
começa do superior esquerdo e segue no sentido horário), opacity (torna transparente o elemento todo, incluindo o fundo e o texto)
-> para deixar só o fundo transparente usar o rgba para o fundo e o color normal para o texto.
-> prefixos -moz-, -webkit-, -ms-, -o-. 
-> o gradiente pode variar de sintaxe de acordo com o navegador e a versão o ideal é usar uma cor sólida normal junto com o gradiente, os navegadores antigos
só lerão o valor sólido e os navegadores novos lerão somente o gradiente.
ex: 
.gradiente {
  background: #cbebff;
  background: linear-gradient(45deg, #f0f9ff 0%, #cbebff 47%, #a1dbff 100%);
}

o ideal mesmo é usar o colorzilla (é um site que gera o código do gradiente automaticamente a partir de uma ferramenta gráfica e dá suporte a vários navegadores)

-> especificidade: para seletores iguais o último a ser declarado tem prioridade, para seletores diferentes o id é maior que a classe que e maior que o seletor de tag
-> espeficidade: quando há varios tipos de seletores soma-se sendo que cada id vale 100, class vale 10, e tag vale 1.

*/